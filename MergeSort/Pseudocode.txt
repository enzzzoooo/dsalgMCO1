emergeSort(String[] arr)

	if (arr == 1)
		return arr

	midpoint = arr.length / 2;

	arrayOne = a[0]...a[midpoint - 1] //assignment through for loop
	arrayTwo = a[midpoint]...a[arr.length - 1] // assignment through for loop
	
	aarrayOne = mergeSort(arrayOne)
        arrayTwo = mergeSort(arrayTwo)

	return merge(arrayOne, arrayTwo)

/******************************************/

merge(String[] arrA, String[] arrB)

	String[] arrC //used to store sorted arrays

	counter = 0

	while (arrA and arrB have elements)

		//using strings at index 0, compare the chars at index counter
		if ( arrA[0][counter] > arrB[0][counter] )
			add arrB[0] to the end of arrC
			remove arrB[0] from arrB
			counter = 0
		else if ( arrA[0][counter] < arrB[0][counter] )
			add arrA[0] to the end of arrC
			remove arrA[0] from arrA
			counter = 0

		//under the assumption no arrays have the same size
		//if condition above not satisfied + reached the size limit of an array
		//automatically assign that arr to the end of arrC
		else if (arrA.length == counter + 1)
			add arrA[0] to the end of arrC
			remove arrA[0] from arrA
			counter = 0
		else if (arrB.length == counter + 1)
			add arrB[0] to the end of arrC
			remove arrB[0] from arrB
			counter = 0
		else
			counter++


	while (arrA has elements)
		add arrA[0] to the end of arrC
		remove arrA[0] from arrA

	while (arrB has elements)
		add arrB[0] to the end of arrC
		remove arrB[0] from b

	return arrC
